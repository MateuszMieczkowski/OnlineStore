
@using OnlineStore.Shared.Accounts
@inject NavigationManager NavManager
@inject IAccountService AccountService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar

<div class="container p-5">
    <EditForm Model="RegisterAdminDto" OnInvalidSubmit="OnInvalidSubmit" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group">
            <label for="email">E-mail</label>
            <input @bind="RegisterAdminDto.Email" type="text" class="form-control" id="email" aria-describedby="loginHelp" placeholder="Wpisz">
            <ValidationMessage For="@(() => RegisterAdminDto.Email)"/>
        </div>
        
        <div class="form-group">
            <label for="password">Hasło</label>
            <input @bind="RegisterAdminDto.Password" type="password" class="form-control" id="password" placeholder="Wpisz">
            <ValidationMessage For="@(() => RegisterAdminDto.Password)"/>
        </div>

        <div class="form-group">
            <label for="confirmPassword">Potwierdź hasło</label>
            <input @bind="RegisterAdminDto.ConfirmPassword" type="password" class="form-control" id="confirmPassword" placeholder="Wpisz">
            <ValidationMessage For="@(() => RegisterAdminDto.ConfirmPassword)"/>
        </div>

        <button type="submit" class="btn btn-dark">Zajerestruj</button>
    </EditForm>
</div>

@code
{
    public RegisterAdmin RegisterAdminDto { get; set; } = new();

    private void OnInvalidSubmit()
    {
        Snackbar.Add("Proszę poprawić formularz", Severity.Error);
    }

    private async Task OnSubmit()
    {
        try
        {
            await AccountService.RegisterAdmin(RegisterAdminDto);
            Snackbar.Add("Zajerestrowano użytkownika", Severity.Success);
            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var isAdmin = authenticationState.User.IsInRole("Admin");
            if (isAdmin)
            {
                NavManager.NavigateTo("/accounts/manage");
            }
            else
            {
                NavManager.NavigateTo("/users/login");
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Nie udało się zajerestrować: {ex.Message}", Severity.Error);
        }
    }
}