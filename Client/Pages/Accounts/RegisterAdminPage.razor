@page "/accounts/register"
@using OnlineStore.Shared.Accounts
@inject NavigationManager NavManager
@inject IAccountService AccountService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar

<div class="container p-5">
    <EditForm Model="RegisterAdminDto" OnInvalidSubmit="OnInvalidSubmit" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator/>
        
        <div class="form-group">
            <MudTextField Variant="Variant.Outlined" @bind-Value="RegisterAdminDto.Email" Label="E-mail" Placeholder="Wpisz" InputType="InputType.Email" Class="mb-4" id="email" For="@(() => RegisterAdminDto.Email)"/>
        </div>
        <div class="form-group">
            <MudTextField Variant="Variant.Outlined" @bind-Value="RegisterAdminDto.Password" Label="Hasło" Placeholder="Wpisz" InputType="InputType.Password" Class="mb-4" id="password" For="@(() => RegisterAdminDto.Password)"/>
        </div>
        <div class="form-group">
            <MudTextField Variant="Variant.Outlined" @bind-Value="RegisterAdminDto.ConfirmPassword" Label="Potwierdź hasło" Placeholder="Wpisz" InputType="InputType.Password" Class="mb-4" id="confirmPassword" For="@(() => RegisterAdminDto.ConfirmPassword)"/>
        </div>

        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Zarejestruj</MudButton>
    </EditForm>
</div>

@code
{
    public RegisterAdmin RegisterAdminDto { get; set; } = new();

    private void OnInvalidSubmit()
    {
        Snackbar.Add("Proszę poprawić formularz", Severity.Error);
    }

    private async Task OnSubmit()
    {
        try
        {
            await AccountService.RegisterAdmin(RegisterAdminDto);
            Snackbar.Add("Zajerestrowano użytkownika", Severity.Success);
            var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var isAdmin = authenticationState.User.IsInRole("Admin");
            if (isAdmin)
            {
                NavManager.NavigateTo("/accounts/manage");
            }
            else
            {
                NavManager.NavigateTo("/users/login");
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Nie udało się zajerestrować: {ex.Message}", Severity.Error);
        }
    }
}