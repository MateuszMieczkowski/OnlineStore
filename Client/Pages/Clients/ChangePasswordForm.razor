@using OnlineStore.Client.Models
@inject IAccountService AccountService
@inject ToastService Toast

<MudCard>
            <MudCardHeader>
                <MudText Typo="Typo.h6">Zmiana hasła</MudText>
            </MudCardHeader>
            <MudCardContent>
                <EditForm Model="Model" OnValidSubmit="OnChangePasswordSubmit">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <div class="form-group">
                        <MudTextField @bind-Value="Model.CurrentPassword" InputType="InputType.Password" Label="Obecne hasło" For="@(() => Model.CurrentPassword)"/>
                    </div>

                    <div class="form-group">
                        <MudTextField @bind-Value="Model.NewPassword" InputType="InputType.Password" Label="Nowe hasło" For="@(() => Model.NewPassword)"/>
                    </div>

                    <div class="form-group">
                        <MudTextField @bind-Value="Model.ConfirmNewPassword" InputType="InputType.Password" Label="Potwierdź nowe hasło" For="@(() => Model.ConfirmNewPassword)"/>
                    </div>

                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Zmień hasło</MudButton>
                </EditForm>
            </MudCardContent>
        </MudCard>

@code {
    public ChangePasswordModel Model { get; set; } = new();

    private async Task OnChangePasswordSubmit()
    {
        var loginSuccessMessage = "Zmienono hasło pomyślnie.";

        try
        {
            await AccountService.ChangeUserPassword(Model);
            Toast.ShowToast(loginSuccessMessage, ToastLevel.Success);
        }
        catch (Exception ex)
        {
            Toast.ShowToast(ex.Message, ToastLevel.Error);
        }
    }
}