@page "/"
@inject IProductService ProductService
@using System.Text.Json
@using System.Net
@using System.Net.Http.Headers
@using SneakersBase.Client.Components
@using SneakersBase.Shared.Models

<PageTitle>Sneakers</PageTitle>

<ProductsFilter Products="products" OnSearchStringChanged="Refresh"></ProductsFilter>

@if (products == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="container" style="max-width: 90%">

        <div class="row">

            @foreach (var product in products.Where(p => p.IsVisible))
            {
                <div class="col-md-2">
                    <div class="card mb-5 ml-2">
                        <img class="img-thumbnail" src=@product.ThumbnailPath alt="Sneaker image" @onclick="() => Toggle(product)">
                        <div class="card-body">
                            <p class="card-text">@product.Name</p>
                            <p class="card-text">@product.ReferenceNumber</p>
                            <p class="card-text">Quantity: @product.Quantity</p>
                            <button @onclick="() => Toggle(product)" type="button" class="btn btn-outline-dark show"> @(product.IsHidden  ? "Details" : "Hide")</button>
                            <div id="info" hidden="@product.IsHidden">
                                <p class="card-text mt-2">Available sizes:</p>
                                <ul class="list-group">
                                    @foreach (var size in product.AvailableSizes)
                                    {
                                        <li class="list-group-item">@size.Size x @size.Quantity</li>
                                    }

                                </ul>
                            </div>


                        </div>
                    </div>
                </div>
            }

        </div>

    </div>

}

@code {

    private List<ProductDto>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllAsync();
    }

    private void Toggle(ProductDto product)
    {
        product.IsHidden = !product.IsHidden;
    }
  
    private void Refresh()
    {
        StateHasChanged();
    }

}



