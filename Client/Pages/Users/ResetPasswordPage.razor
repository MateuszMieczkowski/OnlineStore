@page "/users/reset-password/{token}"
@using OnlineStore.Client.Models
@inject NavigationManager NavManager
@inject IAccountService AccountService
@inject ISnackbar Snackbar

<h3>Zresetuj hasło</h3>
<EditForm Model="Model" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
         <MudTextField @bind-Value="Model.NewPassword" Label="E-mail" Placeholder="Wpisz" InputType="InputType.Password" id="password" For="@(() => Model.NewPassword)"/>
    </div>

    <div class="form-group">
        <MudTextField @bind-Value="Model.ConfirmNewPassword" Label="E-mail" Placeholder="Potwierdź hasło" InputType="InputType.Password" id="confirmPassword" For="@(() => Model.ConfirmNewPassword)"/>
    </div>

    <button type="submit" class="btn btn-dark">Zresetuj hasło</button>
</EditForm>

@code
{
    [Parameter]
    public string Token { get; set; } = "";
    
    public ResetPasswordModel Model { get; set; } = new();

    private async Task OnSubmit()
    {
        try
        {
            var successMessage = "Zresetowano hasło";
            await AccountService.ResetUserPassword(Token, Model);
            Snackbar.Add(successMessage, Severity.Success);
            NavManager.NavigateTo("/users/login");
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }
}